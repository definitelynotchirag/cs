ASSIGNMENT 8

VANILLA BUTTERSCOTCH


#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;

    public:
    Node(int d){
        data = d;
        next = NULL;
    } 
};

void print(Node* head){
    Node* temp = head;

    while(temp){
        cout<<temp->data<<"->";
        temp = temp->next;
    }
}

Node* intersection(Node* head1 , Node* head2){
    Node* temp1 = head1;
    

    Node* inter = new Node(-1);
    Node* temp3 = inter;
    while(temp1){
        Node* temp2 = head2;//temp2 yaha initiate hoga
        while(temp2){
            if(temp1->data == temp2->data){
                Node* newnode = new Node(temp1->data);
                temp3->next = newnode;
                temp3=temp3->next;
            }
            temp2 = temp2->next;
        }
        temp1 = temp1->next;
    }

    return inter->next;
    
}

Node* symdiff(Node* head1, Node* head2){
    Node* uni = new Node(-1);
    Node* temp3 = uni;
    Node* temp1 = head1;
    

    while(temp1){
        Node* temp2 = head2;
        while (temp2)
        {
            if(temp1->data != temp2->data){
                temp2=temp2->next;
            }
            else{
                break;
            }
            if(temp2 == NULL){
                Node* newnode = new Node(temp1->data);
                temp3->next = newnode;
                temp3=temp3->next;
            }
        }
        temp1 = temp1->next;
    }

    Node* temp2 = head2;

    while(temp2){
        Node* temp1 = head1;
        while (temp1)
        {
            if(temp2->data != temp1->data){
                temp1=temp1->next;
            }
            else{
                break;
            }
            if(temp1 == NULL){
                Node* newnode = new Node(temp2->data);
                temp3->next = newnode;
                temp3=temp3->next;
            }
        }
        temp2=temp2->next;
    }

    return uni->next;
}

int main(){
    Node* head1 = new Node(-1);
    int choice = 1;
    Node *temp1 = head1;
    while(choice == 1){
        int d;
        cout<<"Enter the Data :";cin>>d;
        Node * newnode = new Node(d);
        temp1->next=newnode;
        temp1 = temp1->next;
        cout<<"Enter the choice :";cin>>choice;
    }
    head1 = head1->next;
    cout<<"Vanilla :";print(head1);
    cout<<endl;
    
    Node* head2 = new Node(-1);
    bool c = 1;
    Node *temp2 = head2;
    while(c){
        int d;
        cout<<"Enter the Data";cin>>d;
        Node* newnode = new Node(d);
        temp2->next=newnode;
        temp2 = temp2->next;
        cout<<"Enter the choice :";cin>>c;
    }
    head2 = head2->next;
    cout<<"Butterscoch :";print(head2);
    cout<<endl;

    Node* Ans1 = intersection(head1,head2);
    cout<<"Students Eating both :";print(Ans1);
    cout<<endl;

    Node* Ans2 = symdiff(head1,head2);
    cout<<"Students does not Eating both :";
print(Ans2);
}